{
  "適格": {
    "link": "/implementation-compliance.md#dfn-well-formed",
    "yomi": "てきかく",
    "desc": "プログラムが文法規則・診断対象の意味規則・単一定義規則を満たすこと"
  },
  "不適格": {
    "link": "/implementation-compliance.md#dfn-ill-formed",
    "yomi": "ふてきかく",
    "desc": "プログラムが適格でないこと。コンパイルエラーなどになる"
  },
  "未定義の動作": {
    "link": "/implementation-compliance.md#dfn-undefined-behavior",
    "yomi": "みていぎのどうさ",
    "desc": "処理系は予期せぬ動作をする可能性がある。要するに動作保証対象外"
  },
  "未定義動作": { "redirect": "未定義の動作", "yomi": "みていぎどうさ" },
  "未定義": { "redirect": "未定義の動作", "yomi": "みていぎ" },
  "未規定の動作": {
    "link": "/implementation-compliance.md#dfn-unspecified-behavior",
    "yomi": "みきていのどうさ",
    "desc": "事前の断りなく処理系によって異なる動作をする"
  },
  "未規定動作": { "redirect": "未規定の動作", "yomi": "みきていどうさ" },
  "未規定": { "redirect": "未規定の動作", "yomi": "みきてい" },
  "処理系定義の動作": {
    "link": "/implementation-compliance.md#dfn-implementation-defined-behavior",
    "yomi": "しょりけいていぎのどうさ",
    "desc": "処理系によって事前に定めた動作をする"
  },
  "処理系定義": { "redirect": "処理系定義の動作", "yomi": "しょりけいていぎ" },
  "実装定義の動作": { "redirect": "処理系定義の動作", "yomi": "じっそうていぎのどうさ" },
  "実装定義": { "redirect": "処理系定義の動作", "yomi": "じっそうていぎ" },
  "診断情報": {
    "link": "/implementation-compliance.md#dfn-diagnostic-message",
    "yomi": "しんだんじょうほう",
    "desc": "コンパイルエラーや警告。処理系がプログラム翻訳時に提供する情報の総称"
  },
  "診断メッセージ": { "redirect": "診断情報", "yomi": "しんだんめっせーじ" },
  "診断不要": {
    "link": "/implementation-compliance.md#dfn-no-diagnostic-required",
    "yomi": "しんだんふよう",
    "desc": "処理系は規則違反に対してエラーメッセージや警告を出さないかもしれない"
  },
  "カスタマイゼーションポイントオブジェクト": {
    "desc": "プログラム定義型に対するオーバーロードが許されている標準関数名について、中でいい感じにオーバーロード解決して呼び出してくれる関数オブジェクト"
  },
  "CPO": { "redirect": "カスタマイゼーションポイントオブジェクト" },
  "デフォルト初期化": {
    "desc": "`T x;`構文での初期化。トリビアルにデフォルト構築可能な型の場合は初期化されず、そうではないクラス型はデフォルトコンストラクタで初期化する。配列型の場合は各要素が再帰的にデフォルト初期化される"
  },
  "デフォルト構築": {
    "redirect": "デフォルト初期化"
  },
  "値初期化": {
    "desc": "`T x{};`構文での初期化。組み込み型の場合はゼロ相当の値で、クラス型の場合はデフォルトコンストラクタで初期化する。配列型の場合は各要素が再帰的に値初期化される"
  },
  "値構築": {
    "redirect": "値初期化"
  },
  "プログラム定義型": {
    "desc": "標準ライブラリの型を除く、ユーザー（プログラマ）によって定義された型のこと"
  },
  "ユーザー定義型": {
    "redirect": "プログラム定義型"
  },
  "適格要件": {
    "desc": "満たさなければプログラムが不適格となる要件。`static_assert`や関数のdelete宣言などに相当する"
  },
  "テンプレートパラメータ制約": {
    "desc": "関数であればオーバーロード解決に参加するための条件、それ以外であれば受け付ける型の条件"
  }
}
